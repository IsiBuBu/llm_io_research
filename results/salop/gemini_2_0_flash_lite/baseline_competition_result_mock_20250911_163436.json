{
  "game_name": "salop",
  "experiment_type": "baseline",
  "condition_name": "baseline",
  "challenger_model": "gemini_2_0_flash_lite",
  "challenger_display_name": "Gemini 2.0 Flash-Lite (No Thinking)",
  "defender_model": "gemini_2_0_flash_lite",
  "defender_display_name": "Gemini 2.0 Flash-Lite (No Thinking)",
  "challenger_thinking_enabled": false,
  "defender_thinking_enabled": false,
  "simulation_results": [
    {
      "simulation_id": 0,
      "game_name": "salop",
      "experiment_type": "baseline",
      "condition_name": "baseline",
      "players": [
        "challenger",
        "defender_1",
        "defender_2"
      ],
      "actions": {
        "challenger": {
          "price": 2.2,
          "parsing_method": "number_extraction",
          "raw_response": "{\"quantity\": 2.2}",
          "player_id": "challenger",
          "parsing_success": true
        },
        "defender_1": {
          "price": 7.6,
          "parsing_method": "number_extraction",
          "raw_response": "{\"quantity\": 7.6}",
          "player_id": "defender_1",
          "parsing_success": true
        },
        "defender_2": {
          "price": 4.1,
          "parsing_method": "number_extraction",
          "raw_response": "{\"quantity\": 4.1}",
          "player_id": "defender_2",
          "parsing_success": true
        }
      },
      "payoffs": {
        "challenger": -3866.6666666666665,
        "defender_1": -0.0,
        "defender_2": -1300.0
      },
      "game_data": {
        "all_rounds": [
          {
            "round": 1,
            "actions": {
              "challenger": {
                "price": 4.1,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 4.1}",
                "player_id": "challenger",
                "parsing_success": true
              },
              "defender_1": {
                "price": 6.3,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 6.3}",
                "player_id": "defender_1",
                "parsing_success": true
              },
              "defender_2": {
                "price": 5.3,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 5.3}",
                "player_id": "defender_2",
                "parsing_success": true
              }
            },
            "payoffs": {
              "challenger": -2600.0,
              "defender_1": -0.0,
              "defender_2": -900.0
            },
            "game_state": {
              "game_type": "static",
              "current_round": 1,
              "simulation_id": 0,
              "constants": {
                "transport_cost": 1.5,
                "number_of_players": 3,
                "v": 30,
                "marginal_cost": 8,
                "fixed_cost": 100,
                "market_size": 1000
              }
            }
          },
          {
            "round": 2,
            "actions": {
              "challenger": {
                "price": 6.4,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 6.4}",
                "player_id": "challenger",
                "parsing_success": true
              },
              "defender_1": {
                "price": 3.7,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 3.7}",
                "player_id": "defender_1",
                "parsing_success": true
              },
              "defender_2": {
                "price": 5.3,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 5.3}",
                "player_id": "defender_2",
                "parsing_success": true
              }
            },
            "payoffs": {
              "challenger": -0.0,
              "defender_1": -2866.6666666666665,
              "defender_2": -900.0
            },
            "game_state": {
              "game_type": "static",
              "current_round": 2,
              "simulation_id": 0,
              "constants": {
                "transport_cost": 1.5,
                "number_of_players": 3,
                "v": 30,
                "marginal_cost": 8,
                "fixed_cost": 100,
                "market_size": 1000
              }
            }
          },
          {
            "round": 3,
            "actions": {
              "challenger": {
                "price": 2.7,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 2.7}",
                "player_id": "challenger",
                "parsing_success": true
              },
              "defender_1": {
                "price": 2.8,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 2.8}",
                "player_id": "defender_1",
                "parsing_success": true
              },
              "defender_2": {
                "price": 3.2,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 3.2}",
                "player_id": "defender_2",
                "parsing_success": true
              }
            },
            "payoffs": {
              "challenger": -2826.666666666666,
              "defender_1": -2253.333333333335,
              "defender_2": -159.99999999999943
            },
            "game_state": {
              "game_type": "static",
              "current_round": 3,
              "simulation_id": 0,
              "constants": {
                "transport_cost": 1.5,
                "number_of_players": 3,
                "v": 30,
                "marginal_cost": 8,
                "fixed_cost": 100,
                "market_size": 1000
              }
            }
          },
          {
            "round": 4,
            "actions": {
              "challenger": {
                "price": 7.2,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 7.2}",
                "player_id": "challenger",
                "parsing_success": true
              },
              "defender_1": {
                "price": 3.3,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 3.3}",
                "player_id": "defender_1",
                "parsing_success": true
              },
              "defender_2": {
                "price": 7.1,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 7.1}",
                "player_id": "defender_2",
                "parsing_success": true
              }
            },
            "payoffs": {
              "challenger": -106.66666666666654,
              "defender_1": -3133.3333333333335,
              "defender_2": -180.00000000000023
            },
            "game_state": {
              "game_type": "static",
              "current_round": 4,
              "simulation_id": 0,
              "constants": {
                "transport_cost": 1.5,
                "number_of_players": 3,
                "v": 30,
                "marginal_cost": 8,
                "fixed_cost": 100,
                "market_size": 1000
              }
            }
          },
          {
            "round": 5,
            "actions": {
              "challenger": {
                "price": 7.1,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 7.1}",
                "player_id": "challenger",
                "parsing_success": true
              },
              "defender_1": {
                "price": 2.4,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 2.4}",
                "player_id": "defender_1",
                "parsing_success": true
              },
              "defender_2": {
                "price": 7.6,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 7.6}",
                "player_id": "defender_2",
                "parsing_success": true
              }
            },
            "payoffs": {
              "challenger": -300.0000000000001,
              "defender_1": -3733.333333333333,
              "defender_2": -0.0
            },
            "game_state": {
              "game_type": "static",
              "current_round": 5,
              "simulation_id": 0,
              "constants": {
                "transport_cost": 1.5,
                "number_of_players": 3,
                "v": 30,
                "marginal_cost": 8,
                "fixed_cost": 100,
                "market_size": 1000
              }
            }
          },
          {
            "round": 6,
            "actions": {
              "challenger": {
                "price": 6.7,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 6.7}",
                "player_id": "challenger",
                "parsing_success": true
              },
              "defender_1": {
                "price": 5.2,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 5.2}",
                "player_id": "defender_1",
                "parsing_success": true
              },
              "defender_2": {
                "price": 5.0,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 5.0}",
                "player_id": "defender_2",
                "parsing_success": true
              }
            },
            "payoffs": {
              "challenger": -0.0,
              "defender_1": -1213.3333333333333,
              "defender_2": -1700.0000000000002
            },
            "game_state": {
              "game_type": "static",
              "current_round": 6,
              "simulation_id": 0,
              "constants": {
                "transport_cost": 1.5,
                "number_of_players": 3,
                "v": 30,
                "marginal_cost": 8,
                "fixed_cost": 100,
                "market_size": 1000
              }
            }
          },
          {
            "round": 7,
            "actions": {
              "challenger": {
                "price": 3.2,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 3.2}",
                "player_id": "challenger",
                "parsing_success": true
              },
              "defender_1": {
                "price": 2.5,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 2.5}",
                "player_id": "defender_1",
                "parsing_success": true
              },
              "defender_2": {
                "price": 4.0,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 4.0}",
                "player_id": "defender_2",
                "parsing_success": true
              }
            },
            "payoffs": {
              "challenger": -1599.9999999999998,
              "defender_1": -3666.6666666666665,
              "defender_2": -0.0
            },
            "game_state": {
              "game_type": "static",
              "current_round": 7,
              "simulation_id": 0,
              "constants": {
                "transport_cost": 1.5,
                "number_of_players": 3,
                "v": 30,
                "marginal_cost": 8,
                "fixed_cost": 100,
                "market_size": 1000
              }
            }
          },
          {
            "round": 8,
            "actions": {
              "challenger": {
                "price": 3.7,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 3.7}",
                "player_id": "challenger",
                "parsing_success": true
              },
              "defender_1": {
                "price": 2.0,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 2.0}",
                "player_id": "defender_1",
                "parsing_success": true
              },
              "defender_2": {
                "price": 5.5,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 5.5}",
                "player_id": "defender_2",
                "parsing_success": true
              }
            },
            "payoffs": {
              "challenger": -1433.3333333333333,
              "defender_1": -4000.0,
              "defender_2": -0.0
            },
            "game_state": {
              "game_type": "static",
              "current_round": 8,
              "simulation_id": 0,
              "constants": {
                "transport_cost": 1.5,
                "number_of_players": 3,
                "v": 30,
                "marginal_cost": 8,
                "fixed_cost": 100,
                "market_size": 1000
              }
            }
          },
          {
            "round": 9,
            "actions": {
              "challenger": {
                "price": 2.1,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 2.1}",
                "player_id": "challenger",
                "parsing_success": true
              },
              "defender_1": {
                "price": 6.4,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 6.4}",
                "player_id": "defender_1",
                "parsing_success": true
              },
              "defender_2": {
                "price": 6.2,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 6.2}",
                "player_id": "defender_2",
                "parsing_success": true
              }
            },
            "payoffs": {
              "challenger": -3933.3333333333335,
              "defender_1": -159.9999999999999,
              "defender_2": -420.00000000000006
            },
            "game_state": {
              "game_type": "static",
              "current_round": 9,
              "simulation_id": 0,
              "constants": {
                "transport_cost": 1.5,
                "number_of_players": 3,
                "v": 30,
                "marginal_cost": 8,
                "fixed_cost": 100,
                "market_size": 1000
              }
            }
          },
          {
            "round": 10,
            "actions": {
              "challenger": {
                "price": 2.2,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 2.2}",
                "player_id": "challenger",
                "parsing_success": true
              },
              "defender_1": {
                "price": 7.6,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 7.6}",
                "player_id": "defender_1",
                "parsing_success": true
              },
              "defender_2": {
                "price": 4.1,
                "parsing_method": "number_extraction",
                "raw_response": "{\"quantity\": 4.1}",
                "player_id": "defender_2",
                "parsing_success": true
              }
            },
            "payoffs": {
              "challenger": -3866.6666666666665,
              "defender_1": -0.0,
              "defender_2": -1300.0
            },
            "game_state": {
              "game_type": "static",
              "current_round": 10,
              "simulation_id": 0,
              "constants": {
                "transport_cost": 1.5,
                "number_of_players": 3,
                "v": 30,
                "marginal_cost": 8,
                "fixed_cost": 100,
                "market_size": 1000
              }
            }
          }
        ],
        "num_rounds": 10,
        "final_round_actions": {
          "challenger": {
            "price": 2.2,
            "parsing_method": "number_extraction",
            "raw_response": "{\"quantity\": 2.2}",
            "player_id": "challenger",
            "parsing_success": true
          },
          "defender_1": {
            "price": 7.6,
            "parsing_method": "number_extraction",
            "raw_response": "{\"quantity\": 7.6}",
            "player_id": "defender_1",
            "parsing_success": true
          },
          "defender_2": {
            "price": 4.1,
            "parsing_method": "number_extraction",
            "raw_response": "{\"quantity\": 4.1}",
            "player_id": "defender_2",
            "parsing_success": true
          }
        },
        "final_round_payoffs": {
          "challenger": -3866.6666666666665,
          "defender_1": -0.0,
          "defender_2": -1300.0
        }
      }
    }
  ],
  "competition_metadata": {
    "game_config": {
      "game_name": "salop",
      "experiment_type": "baseline",
      "condition_name": "baseline",
      "constants": {
        "transport_cost": 1.5,
        "number_of_players": 3,
        "v": 30,
        "marginal_cost": 8,
        "fixed_cost": 100,
        "market_size": 1000
      }
    },
    "challenger_model_config": "gemini_2_0_flash_lite",
    "defender_model_config": "gemini_2_0_flash_lite",
    "num_simulations_planned": 1,
    "mock_mode": true,
    "num_simulations_completed": 1,
    "success_rate": 1.0,
    "total_duration_seconds": 0.336339
  },
  "start_time": "2025-09-11T16:34:34.674078",
  "end_time": "2025-09-11T16:34:35.010417",
  "total_duration": 0.336339
}