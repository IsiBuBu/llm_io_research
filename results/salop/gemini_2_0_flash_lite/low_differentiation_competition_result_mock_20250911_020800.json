{
  "game_name": "salop",
  "experiment_type": "ablation_studies",
  "condition_name": "low_differentiation",
  "challenger_model": "gemini_2_0_flash_lite",
  "challenger_display_name": "Gemini 2.0 Flash-Lite (No Thinking)",
  "defender_model": "gemini_2_0_flash_lite",
  "defender_display_name": "Gemini 2.0 Flash-Lite (No Thinking)",
  "challenger_thinking_enabled": false,
  "defender_thinking_enabled": false,
  "simulation_results": [
    "GameResult(simulation_id=0, game_name='salop', experiment_type='ablation_studies', condition_name='low_differentiation', players=['challenger', 'defender_1', 'defender_2'], actions={'challenger': {'price': 2.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.4}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 7.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.2}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.1}', 'player_id': 'defender_2', 'parsing_success': True}}, payoffs={'challenger': -3733.333333333333, 'defender_1': -0.0, 'defender_2': -966.6666666666667}, game_data={'game_data': {'game_name': 'salop', 'experiment_type': 'ablation_studies', 'condition_name': 'low_differentiation', 'actions': {'challenger': {'price': 2.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.4}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 7.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.2}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.1}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -3733.333333333333, 'defender_1': -0.0, 'defender_2': -966.6666666666667}, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}, 'game_state': {'game_type': 'static', 'current_round': 10, 'simulation_id': 0, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}, 'round_data': [{'round': 1, 'actions': {'challenger': {'price': 2.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.6}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.5}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.9}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -3600.0, 'defender_1': -1166.6666666666665, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 1, 'simulation_id': 0, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 2, 'actions': {'challenger': {'price': 5.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.2}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 2.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.5}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 7.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.3}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -933.3333333333333, 'defender_1': -3666.6666666666665, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 2, 'simulation_id': 0, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 3, 'actions': {'challenger': {'price': 2.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.6}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.8}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.2}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -3600.0, 'defender_1': -1066.6666666666667, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 3, 'simulation_id': 0, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 4, 'actions': {'challenger': {'price': 2.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.1}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 3.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.1}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 4.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.3}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -3933.3333333333335, 'defender_1': -1633.3333333333333, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 4, 'simulation_id': 0, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 5, 'actions': {'challenger': {'price': 4.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.5}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 2.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.2}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 7.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.3}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -1166.6666666666665, 'defender_1': -3866.6666666666665, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 5, 'simulation_id': 0, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 6, 'actions': {'challenger': {'price': 7.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.7}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 3.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.5}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 4.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.1}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -3000.0, 'defender_2': -1300.0}, 'game_state': {'game_type': 'static', 'current_round': 6, 'simulation_id': 0, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 7, 'actions': {'challenger': {'price': 2.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.9}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 5.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.8}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.4}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -3399.9999999999995, 'defender_1': -0.0, 'defender_2': -866.6666666666665}, 'game_state': {'game_type': 'static', 'current_round': 7, 'simulation_id': 0, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 8, 'actions': {'challenger': {'price': 4.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.9}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 5.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.6}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.5}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -2066.6666666666665, 'defender_1': -800.0000000000001, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 8, 'simulation_id': 0, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 9, 'actions': {'challenger': {'price': 6.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.2}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 2.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.7}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.8}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -599.9999999999999, 'defender_1': -3533.333333333333, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 9, 'simulation_id': 0, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 10, 'actions': {'challenger': {'price': 2.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.4}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 7.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.2}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.1}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -3733.333333333333, 'defender_1': -0.0, 'defender_2': -966.6666666666667}, 'game_state': {'game_type': 'static', 'current_round': 10, 'simulation_id': 0, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}], 'num_rounds_played': 10}}, round_data=[])",
    "GameResult(simulation_id=1, game_name='salop', experiment_type='ablation_studies', condition_name='low_differentiation', players=['challenger', 'defender_1', 'defender_2'], actions={'challenger': {'price': 3.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.0}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 5.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.3}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.3}', 'player_id': 'defender_2', 'parsing_success': True}}, payoffs={'challenger': -3333.333333333333, 'defender_1': -450.0, 'defender_2': -450.0}, game_data={'game_data': {'game_name': 'salop', 'experiment_type': 'ablation_studies', 'condition_name': 'low_differentiation', 'actions': {'challenger': {'price': 3.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.0}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 5.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.3}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.3}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -3333.333333333333, 'defender_1': -450.0, 'defender_2': -450.0}, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}, 'game_state': {'game_type': 'static', 'current_round': 10, 'simulation_id': 1, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}, 'round_data': [{'round': 1, 'actions': {'challenger': {'price': 7.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.3}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 2.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.8}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.3}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -3466.6666666666665, 'defender_2': -566.6666666666667}, 'game_state': {'game_type': 'static', 'current_round': 1, 'simulation_id': 1, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 2, 'actions': {'challenger': {'price': 5.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.6}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.2}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.6}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -1600.0000000000002, 'defender_1': -599.9999999999999, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 2, 'simulation_id': 1, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 3, 'actions': {'challenger': {'price': 3.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.0}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.9}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 2.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.7}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -1666.6666666666665, 'defender_1': -0.0, 'defender_2': -3533.333333333333}, 'game_state': {'game_type': 'static', 'current_round': 3, 'simulation_id': 1, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 4, 'actions': {'challenger': {'price': 6.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.3}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 3.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.6}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 3.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.7}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -2640.000000000001, 'defender_2': -1719.999999999999}, 'game_state': {'game_type': 'static', 'current_round': 4, 'simulation_id': 1, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 5, 'actions': {'challenger': {'price': 3.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.7}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.5}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 2.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.9}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -1433.3333333333333, 'defender_1': -0.0, 'defender_2': -3399.9999999999995}, 'game_state': {'game_type': 'static', 'current_round': 5, 'simulation_id': 1, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 6, 'actions': {'challenger': {'price': 5.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.7}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 2.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.1}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.6}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -766.6666666666665, 'defender_1': -3933.3333333333335, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 6, 'simulation_id': 1, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 7, 'actions': {'challenger': {'price': 7.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.4}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 7.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.2}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 3.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.3}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -266.6666666666666, 'defender_2': -3133.3333333333335}, 'game_state': {'game_type': 'static', 'current_round': 7, 'simulation_id': 1, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 8, 'actions': {'challenger': {'price': 6.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.8}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.3}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 7.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.5}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -400.00000000000006, 'defender_1': -1133.3333333333335, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 8, 'simulation_id': 1, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 9, 'actions': {'challenger': {'price': 7.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.1}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 2.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.9}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.1}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -3399.9999999999995, 'defender_2': -966.6666666666667}, 'game_state': {'game_type': 'static', 'current_round': 9, 'simulation_id': 1, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 10, 'actions': {'challenger': {'price': 3.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.0}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 5.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.3}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.3}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -3333.333333333333, 'defender_1': -450.0, 'defender_2': -450.0}, 'game_state': {'game_type': 'static', 'current_round': 10, 'simulation_id': 1, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}], 'num_rounds_played': 10}}, round_data=[])",
    "GameResult(simulation_id=2, game_name='salop', experiment_type='ablation_studies', condition_name='low_differentiation', players=['challenger', 'defender_1', 'defender_2'], actions={'challenger': {'price': 5.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.7}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.0}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.2}', 'player_id': 'defender_2', 'parsing_success': True}}, payoffs={'challenger': -766.6666666666665, 'defender_1': -0.0, 'defender_2': -1866.6666666666665}, game_data={'game_data': {'game_name': 'salop', 'experiment_type': 'ablation_studies', 'condition_name': 'low_differentiation', 'actions': {'challenger': {'price': 5.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.7}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.0}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.2}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -766.6666666666665, 'defender_1': -0.0, 'defender_2': -1866.6666666666665}, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}, 'game_state': {'game_type': 'static', 'current_round': 10, 'simulation_id': 2, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}, 'round_data': [{'round': 1, 'actions': {'challenger': {'price': 2.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.1}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.2}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 3.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.5}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -3933.3333333333335, 'defender_1': -0.0, 'defender_2': -1500.0}, 'game_state': {'game_type': 'static', 'current_round': 1, 'simulation_id': 2, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 2, 'actions': {'challenger': {'price': 2.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.0}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.9}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.0}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -4000.0, 'defender_1': -0.0, 'defender_2': -1000.0}, 'game_state': {'game_type': 'static', 'current_round': 2, 'simulation_id': 2, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 3, 'actions': {'challenger': {'price': 5.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.8}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 2.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.6}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.7}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -733.3333333333334, 'defender_1': -3600.0, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 3, 'simulation_id': 2, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 4, 'actions': {'challenger': {'price': 4.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.1}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.1}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 2.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.6}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -1300.0, 'defender_1': -0.0, 'defender_2': -3600.0}, 'game_state': {'game_type': 'static', 'current_round': 4, 'simulation_id': 2, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 5, 'actions': {'challenger': {'price': 7.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.3}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.8}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 4.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.4}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -1066.6666666666667, 'defender_2': -2399.9999999999995}, 'game_state': {'game_type': 'static', 'current_round': 5, 'simulation_id': 2, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 6, 'actions': {'challenger': {'price': 3.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.0}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 2.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.4}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.4}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -1666.6666666666665, 'defender_1': -3733.333333333333, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 6, 'simulation_id': 2, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 7, 'actions': {'challenger': {'price': 3.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.2}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.4}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 7.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.9}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -3199.9999999999995, 'defender_1': -533.3333333333331, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 7, 'simulation_id': 2, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 8, 'actions': {'challenger': {'price': 7.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.3}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.3}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 7.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.3}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -116.66666666666669, 'defender_1': -1133.3333333333335, 'defender_2': -116.66666666666669}, 'game_state': {'game_type': 'static', 'current_round': 8, 'simulation_id': 2, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 9, 'actions': {'challenger': {'price': 3.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.1}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 2.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.4}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.2}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -1633.3333333333333, 'defender_1': -3733.333333333333, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 9, 'simulation_id': 2, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 10, 'actions': {'challenger': {'price': 5.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.7}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.0}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.2}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -766.6666666666665, 'defender_1': -0.0, 'defender_2': -1866.6666666666665}, 'game_state': {'game_type': 'static', 'current_round': 10, 'simulation_id': 2, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}], 'num_rounds_played': 10}}, round_data=[])",
    "GameResult(simulation_id=3, game_name='salop', experiment_type='ablation_studies', condition_name='low_differentiation', players=['challenger', 'defender_1', 'defender_2'], actions={'challenger': {'price': 7.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.8}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.8}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.8}', 'player_id': 'defender_2', 'parsing_success': True}}, payoffs={'challenger': -0.0, 'defender_1': -2133.3333333333335, 'defender_2': -400.00000000000006}, game_data={'game_data': {'game_name': 'salop', 'experiment_type': 'ablation_studies', 'condition_name': 'low_differentiation', 'actions': {'challenger': {'price': 7.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.8}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.8}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.8}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -2133.3333333333335, 'defender_2': -400.00000000000006}, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}, 'game_state': {'game_type': 'static', 'current_round': 10, 'simulation_id': 3, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}, 'round_data': [{'round': 1, 'actions': {'challenger': {'price': 6.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.5}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 7.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.0}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.6}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -899.9999999999995, 'defender_1': -0.0, 'defender_2': -560.0000000000006}, 'game_state': {'game_type': 'static', 'current_round': 1, 'simulation_id': 3, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 2, 'actions': {'challenger': {'price': 3.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.5}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 3.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.6}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.6}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -2700.0000000000005, 'defender_1': -1759.9999999999993, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 2, 'simulation_id': 3, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 3, 'actions': {'challenger': {'price': 4.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.9}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 2.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.8}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 4.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.1}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -3466.6666666666665, 'defender_2': -1300.0}, 'game_state': {'game_type': 'static', 'current_round': 3, 'simulation_id': 3, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 4, 'actions': {'challenger': {'price': 2.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.9}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 5.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.8}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.5}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -3399.9999999999995, 'defender_1': -733.3333333333334, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 4, 'simulation_id': 3, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 5, 'actions': {'challenger': {'price': 4.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.9}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 5.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.9}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.7}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -2066.6666666666665, 'defender_1': -699.9999999999999, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 5, 'simulation_id': 3, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 6, 'actions': {'challenger': {'price': 5.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.2}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.6}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 3.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.4}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -933.3333333333333, 'defender_1': -0.0, 'defender_2': -3066.666666666666}, 'game_state': {'game_type': 'static', 'current_round': 6, 'simulation_id': 3, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 7, 'actions': {'challenger': {'price': 3.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.3}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.6}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 3.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.9}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -3133.3333333333335, 'defender_1': -0.0, 'defender_2': -1366.6666666666665}, 'game_state': {'game_type': 'static', 'current_round': 7, 'simulation_id': 3, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 8, 'actions': {'challenger': {'price': 5.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.2}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.8}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.9}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -933.3333333333333, 'defender_1': -2133.3333333333335, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 8, 'simulation_id': 3, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 9, 'actions': {'challenger': {'price': 7.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.2}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 3.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.1}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 4.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.3}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -3266.6666666666665, 'defender_2': -1233.3333333333333}, 'game_state': {'game_type': 'static', 'current_round': 9, 'simulation_id': 3, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 10, 'actions': {'challenger': {'price': 7.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.8}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.8}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.8}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -2133.3333333333335, 'defender_2': -400.00000000000006}, 'game_state': {'game_type': 'static', 'current_round': 10, 'simulation_id': 3, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}], 'num_rounds_played': 10}}, round_data=[])",
    "GameResult(simulation_id=4, game_name='salop', experiment_type='ablation_studies', condition_name='low_differentiation', players=['challenger', 'defender_1', 'defender_2'], actions={'challenger': {'price': 4.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.9}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 3.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.6}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 4.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.4}', 'player_id': 'defender_2', 'parsing_success': True}}, payoffs={'challenger': -0.0, 'defender_1': -2933.3333333333335, 'defender_2': -1199.9999999999998}, game_data={'game_data': {'game_name': 'salop', 'experiment_type': 'ablation_studies', 'condition_name': 'low_differentiation', 'actions': {'challenger': {'price': 4.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.9}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 3.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.6}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 4.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.4}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -2933.3333333333335, 'defender_2': -1199.9999999999998}, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}, 'game_state': {'game_type': 'static', 'current_round': 10, 'simulation_id': 4, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}, 'round_data': [{'round': 1, 'actions': {'challenger': {'price': 3.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.8}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 5.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.8}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 4.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.9}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -2800.0, 'defender_1': -0.0, 'defender_2': -1033.3333333333333}, 'game_state': {'game_type': 'static', 'current_round': 1, 'simulation_id': 4, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 2, 'actions': {'challenger': {'price': 7.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.0}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 3.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.6}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 3.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.1}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -1466.6666666666667, 'defender_2': -3266.6666666666665}, 'game_state': {'game_type': 'static', 'current_round': 2, 'simulation_id': 4, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 3, 'actions': {'challenger': {'price': 5.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.8}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 3.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.6}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 4.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.2}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -2933.3333333333335, 'defender_2': -1266.6666666666665}, 'game_state': {'game_type': 'static', 'current_round': 3, 'simulation_id': 4, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 4, 'actions': {'challenger': {'price': 2.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.9}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 3.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.7}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 7.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.3}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -3399.9999999999995, 'defender_1': -1433.3333333333333, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 4, 'simulation_id': 4, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 5, 'actions': {'challenger': {'price': 3.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.1}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 5.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.0}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 2.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.8}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -1633.3333333333333, 'defender_1': -0.0, 'defender_2': -3466.6666666666665}, 'game_state': {'game_type': 'static', 'current_round': 5, 'simulation_id': 4, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 6, 'actions': {'challenger': {'price': 6.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.4}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.5}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 7.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.8}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -533.3333333333331, 'defender_1': -2333.333333333333, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 6, 'simulation_id': 4, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 7, 'actions': {'challenger': {'price': 3.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.0}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.0}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 2.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.8}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -1666.6666666666665, 'defender_1': -0.0, 'defender_2': -3466.6666666666665}, 'game_state': {'game_type': 'static', 'current_round': 7, 'simulation_id': 4, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 8, 'actions': {'challenger': {'price': 6.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.2}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.3}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 4.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.8}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -2466.6666666666665, 'defender_2': -1066.6666666666667}, 'game_state': {'game_type': 'static', 'current_round': 8, 'simulation_id': 4, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 9, 'actions': {'challenger': {'price': 8.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 8.0}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.8}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.2}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': 0.0, 'defender_1': -400.00000000000006, 'defender_2': -1866.6666666666665}, 'game_state': {'game_type': 'static', 'current_round': 9, 'simulation_id': 4, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 10, 'actions': {'challenger': {'price': 4.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.9}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 3.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.6}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 4.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.4}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -2933.3333333333335, 'defender_2': -1199.9999999999998}, 'game_state': {'game_type': 'static', 'current_round': 10, 'simulation_id': 4, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}], 'num_rounds_played': 10}}, round_data=[])",
    "GameResult(simulation_id=5, game_name='salop', experiment_type='ablation_studies', condition_name='low_differentiation', players=['challenger', 'defender_1', 'defender_2'], actions={'challenger': {'price': 3.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.7}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 7.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.2}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.1}', 'player_id': 'defender_2', 'parsing_success': True}}, payoffs={'challenger': -2866.6666666666665, 'defender_1': -0.0, 'defender_2': -633.3333333333334}, game_data={'game_data': {'game_name': 'salop', 'experiment_type': 'ablation_studies', 'condition_name': 'low_differentiation', 'actions': {'challenger': {'price': 3.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.7}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 7.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.2}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.1}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -2866.6666666666665, 'defender_1': -0.0, 'defender_2': -633.3333333333334}, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}, 'game_state': {'game_type': 'static', 'current_round': 10, 'simulation_id': 5, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}, 'round_data': [{'round': 1, 'actions': {'challenger': {'price': 4.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.3}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 2.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.6}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.2}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -1233.3333333333333, 'defender_1': -3600.0, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 1, 'simulation_id': 5, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 2, 'actions': {'challenger': {'price': 5.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.9}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.6}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.5}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -699.9999999999999, 'defender_1': -0.0, 'defender_2': -1666.6666666666665}, 'game_state': {'game_type': 'static', 'current_round': 2, 'simulation_id': 5, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 3, 'actions': {'challenger': {'price': 3.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.6}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 5.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.6}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 7.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.0}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -2933.3333333333335, 'defender_1': -800.0000000000001, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 3, 'simulation_id': 5, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 4, 'actions': {'challenger': {'price': 5.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.9}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 3.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.7}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.0}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -2866.6666666666665, 'defender_2': -1000.0}, 'game_state': {'game_type': 'static', 'current_round': 4, 'simulation_id': 5, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 5, 'actions': {'challenger': {'price': 6.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.6}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.1}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 7.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.1}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -466.66666666666674, 'defender_1': -1266.6666666666667, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 5, 'simulation_id': 5, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 6, 'actions': {'challenger': {'price': 5.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.4}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 2.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.2}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 7.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.1}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -866.6666666666665, 'defender_1': -3866.6666666666665, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 6, 'simulation_id': 5, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 7, 'actions': {'challenger': {'price': 7.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.8}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.3}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.5}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -2466.6666666666665, 'defender_2': -833.3333333333333}, 'game_state': {'game_type': 'static', 'current_round': 7, 'simulation_id': 5, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 8, 'actions': {'challenger': {'price': 3.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.2}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.0}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 2.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.2}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -1599.9999999999998, 'defender_1': -0.0, 'defender_2': -3866.6666666666665}, 'game_state': {'game_type': 'static', 'current_round': 8, 'simulation_id': 5, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 9, 'actions': {'challenger': {'price': 7.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.6}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 7.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.4}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 7.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.6}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -66.66666666666673, 'defender_1': -399.9999999999997, 'defender_2': -66.66666666666673}, 'game_state': {'game_type': 'static', 'current_round': 9, 'simulation_id': 5, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 10, 'actions': {'challenger': {'price': 3.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.7}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 7.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.2}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.1}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -2866.6666666666665, 'defender_1': -0.0, 'defender_2': -633.3333333333334}, 'game_state': {'game_type': 'static', 'current_round': 10, 'simulation_id': 5, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}], 'num_rounds_played': 10}}, round_data=[])",
    "GameResult(simulation_id=6, game_name='salop', experiment_type='ablation_studies', condition_name='low_differentiation', players=['challenger', 'defender_1', 'defender_2'], actions={'challenger': {'price': 7.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.3}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.4}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.9}', 'player_id': 'defender_2', 'parsing_success': True}}, payoffs={'challenger': -0.0, 'defender_1': -2399.9999999999995, 'defender_2': -699.9999999999999}, game_data={'game_data': {'game_name': 'salop', 'experiment_type': 'ablation_studies', 'condition_name': 'low_differentiation', 'actions': {'challenger': {'price': 7.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.3}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.4}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.9}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -2399.9999999999995, 'defender_2': -699.9999999999999}, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}, 'game_state': {'game_type': 'static', 'current_round': 10, 'simulation_id': 6, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}, 'round_data': [{'round': 1, 'actions': {'challenger': {'price': 4.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.3}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.6}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 3.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.9}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -1233.3333333333333, 'defender_1': -0.0, 'defender_2': -2733.333333333333}, 'game_state': {'game_type': 'static', 'current_round': 1, 'simulation_id': 6, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 2, 'actions': {'challenger': {'price': 7.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.9}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 2.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.5}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 7.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.5}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -3666.6666666666665, 'defender_2': -166.66666666666666}, 'game_state': {'game_type': 'static', 'current_round': 2, 'simulation_id': 6, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 3, 'actions': {'challenger': {'price': 3.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.9}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 5.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.1}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 3.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.4}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -1366.6666666666665, 'defender_1': -0.0, 'defender_2': -3066.666666666666}, 'game_state': {'game_type': 'static', 'current_round': 3, 'simulation_id': 6, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 4, 'actions': {'challenger': {'price': 6.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.0}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.3}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 2.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.5}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -1233.3333333333333, 'defender_2': -3666.6666666666665}, 'game_state': {'game_type': 'static', 'current_round': 4, 'simulation_id': 6, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 5, 'actions': {'challenger': {'price': 5.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.7}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 3.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.6}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.7}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -383.33333333333326, 'defender_1': -2933.3333333333335, 'defender_2': -383.33333333333326}, 'game_state': {'game_type': 'static', 'current_round': 5, 'simulation_id': 6, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 6, 'actions': {'challenger': {'price': 7.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.2}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 2.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.7}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 4.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.0}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -3533.333333333333, 'defender_2': -1333.3333333333333}, 'game_state': {'game_type': 'static', 'current_round': 6, 'simulation_id': 6, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 7, 'actions': {'challenger': {'price': 6.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.6}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 7.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.5}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 2.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.3}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -466.66666666666674, 'defender_1': -0.0, 'defender_2': -3800.0}, 'game_state': {'game_type': 'static', 'current_round': 7, 'simulation_id': 6, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 8, 'actions': {'challenger': {'price': 6.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.7}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.2}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 3.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.5}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -1266.6666666666665, 'defender_2': -3000.0}, 'game_state': {'game_type': 'static', 'current_round': 8, 'simulation_id': 6, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 9, 'actions': {'challenger': {'price': 2.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.1}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 3.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.4}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 2.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.1}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -2950.0, 'defender_1': -0.0, 'defender_2': -2950.0}, 'game_state': {'game_type': 'static', 'current_round': 9, 'simulation_id': 6, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 10, 'actions': {'challenger': {'price': 7.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.3}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.4}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.9}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -2399.9999999999995, 'defender_2': -699.9999999999999}, 'game_state': {'game_type': 'static', 'current_round': 10, 'simulation_id': 6, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}], 'num_rounds_played': 10}}, round_data=[])",
    "GameResult(simulation_id=7, game_name='salop', experiment_type='ablation_studies', condition_name='low_differentiation', players=['challenger', 'defender_1', 'defender_2'], actions={'challenger': {'price': 4.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.8}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 7.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.3}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 8.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 8.0}', 'player_id': 'defender_2', 'parsing_success': True}}, payoffs={'challenger': -2133.3333333333335, 'defender_1': -233.33333333333337, 'defender_2': 0.0}, game_data={'game_data': {'game_name': 'salop', 'experiment_type': 'ablation_studies', 'condition_name': 'low_differentiation', 'actions': {'challenger': {'price': 4.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.8}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 7.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.3}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 8.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 8.0}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -2133.3333333333335, 'defender_1': -233.33333333333337, 'defender_2': 0.0}, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}, 'game_state': {'game_type': 'static', 'current_round': 10, 'simulation_id': 7, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}, 'round_data': [{'round': 1, 'actions': {'challenger': {'price': 7.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.4}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 5.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.8}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.7}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -880.0000000000008, 'defender_2': -1379.999999999999}, 'game_state': {'game_type': 'static', 'current_round': 1, 'simulation_id': 7, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 2, 'actions': {'challenger': {'price': 5.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.3}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 2.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.3}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.4}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -720.0000000000015, 'defender_1': -3800.0, 'defender_2': -173.33333333333192}, 'game_state': {'game_type': 'static', 'current_round': 2, 'simulation_id': 7, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 3, 'actions': {'challenger': {'price': 7.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.6}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 7.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.9}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.6}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -133.33333333333346, 'defender_1': -0.0, 'defender_2': -933.3333333333335}, 'game_state': {'game_type': 'static', 'current_round': 3, 'simulation_id': 7, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 4, 'actions': {'challenger': {'price': 7.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.4}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 2.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.7}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 3.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.8}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -3533.333333333333, 'defender_2': -1400.0}, 'game_state': {'game_type': 'static', 'current_round': 4, 'simulation_id': 7, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 5, 'actions': {'challenger': {'price': 2.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.9}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.5}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 7.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.8}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -3399.9999999999995, 'defender_1': -500.0, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 5, 'simulation_id': 7, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 6, 'actions': {'challenger': {'price': 4.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.3}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.6}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 2.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.9}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -1233.3333333333333, 'defender_1': -0.0, 'defender_2': -3399.9999999999995}, 'game_state': {'game_type': 'static', 'current_round': 6, 'simulation_id': 7, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 7, 'actions': {'challenger': {'price': 4.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.8}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 5.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.0}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 4.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.9}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -1920.0000000000018, 'defender_1': -200.00000000000102, 'defender_2': -1033.33333333333}, 'game_state': {'game_type': 'static', 'current_round': 7, 'simulation_id': 7, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 8, 'actions': {'challenger': {'price': 5.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.8}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 5.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.8}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 2.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.6}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -366.6666666666667, 'defender_1': -366.6666666666667, 'defender_2': -3600.0}, 'game_state': {'game_type': 'static', 'current_round': 8, 'simulation_id': 7, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 9, 'actions': {'challenger': {'price': 6.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.1}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.4}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.9}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -2399.9999999999995, 'defender_2': -699.9999999999999}, 'game_state': {'game_type': 'static', 'current_round': 9, 'simulation_id': 7, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 10, 'actions': {'challenger': {'price': 4.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.8}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 7.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.3}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 8.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 8.0}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -2133.3333333333335, 'defender_1': -233.33333333333337, 'defender_2': 0.0}, 'game_state': {'game_type': 'static', 'current_round': 10, 'simulation_id': 7, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}], 'num_rounds_played': 10}}, round_data=[])",
    "GameResult(simulation_id=8, game_name='salop', experiment_type='ablation_studies', condition_name='low_differentiation', players=['challenger', 'defender_1', 'defender_2'], actions={'challenger': {'price': 6.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.7}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.1}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.6}', 'player_id': 'defender_2', 'parsing_success': True}}, payoffs={'challenger': -0.0, 'defender_1': -633.3333333333334, 'defender_2': -1600.0000000000002}, game_data={'game_data': {'game_name': 'salop', 'experiment_type': 'ablation_studies', 'condition_name': 'low_differentiation', 'actions': {'challenger': {'price': 6.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.7}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.1}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.6}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -633.3333333333334, 'defender_2': -1600.0000000000002}, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}, 'game_state': {'game_type': 'static', 'current_round': 10, 'simulation_id': 8, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}, 'round_data': [{'round': 1, 'actions': {'challenger': {'price': 4.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.7}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.3}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.7}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -2199.9999999999995, 'defender_1': -0.0, 'defender_2': -766.6666666666665}, 'game_state': {'game_type': 'static', 'current_round': 1, 'simulation_id': 8, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 2, 'actions': {'challenger': {'price': 5.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.3}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.6}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.4}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -720.0000000000015, 'defender_1': -2266.666666666667, 'defender_2': -173.33333333333192}, 'game_state': {'game_type': 'static', 'current_round': 2, 'simulation_id': 8, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 3, 'actions': {'challenger': {'price': 3.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.9}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 2.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.7}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.1}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -1366.6666666666665, 'defender_1': -3533.333333333333, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 3, 'simulation_id': 8, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 4, 'actions': {'challenger': {'price': 4.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.3}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 2.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.8}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 4.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.7}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -1233.3333333333333, 'defender_1': -3466.6666666666665, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 4, 'simulation_id': 8, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 5, 'actions': {'challenger': {'price': 3.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.8}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 8.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 8.0}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.4}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -2800.0, 'defender_1': 0.0, 'defender_2': -866.6666666666665}, 'game_state': {'game_type': 'static', 'current_round': 5, 'simulation_id': 8, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 6, 'actions': {'challenger': {'price': 4.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.1}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 2.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.1}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 4.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.1}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -650.0, 'defender_1': -3933.3333333333335, 'defender_2': -650.0}, 'game_state': {'game_type': 'static', 'current_round': 6, 'simulation_id': 8, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 7, 'actions': {'challenger': {'price': 5.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.5}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.1}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.1}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -833.3333333333333, 'defender_1': -0.0, 'defender_2': -1933.3333333333335}, 'game_state': {'game_type': 'static', 'current_round': 7, 'simulation_id': 8, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 8, 'actions': {'challenger': {'price': 5.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.8}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 3.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.4}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 3.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.7}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -3066.666666666666, 'defender_2': -1433.3333333333333}, 'game_state': {'game_type': 'static', 'current_round': 8, 'simulation_id': 8, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 9, 'actions': {'challenger': {'price': 2.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.8}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 5.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.0}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.9}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -3466.6666666666665, 'defender_1': -1000.0, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 9, 'simulation_id': 8, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 10, 'actions': {'challenger': {'price': 6.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.7}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.1}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.6}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -633.3333333333334, 'defender_2': -1600.0000000000002}, 'game_state': {'game_type': 'static', 'current_round': 10, 'simulation_id': 8, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}], 'num_rounds_played': 10}}, round_data=[])",
    "GameResult(simulation_id=9, game_name='salop', experiment_type='ablation_studies', condition_name='low_differentiation', players=['challenger', 'defender_1', 'defender_2'], actions={'challenger': {'price': 5.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.3}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.3}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 3.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.8}', 'player_id': 'defender_2', 'parsing_success': True}}, payoffs={'challenger': -0.0, 'defender_1': -1233.3333333333333, 'defender_2': -2800.0}, game_data={'game_data': {'game_name': 'salop', 'experiment_type': 'ablation_studies', 'condition_name': 'low_differentiation', 'actions': {'challenger': {'price': 5.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.3}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.3}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 3.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.8}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -1233.3333333333333, 'defender_2': -2800.0}, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}, 'game_state': {'game_type': 'static', 'current_round': 10, 'simulation_id': 9, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}, 'round_data': [{'round': 1, 'actions': {'challenger': {'price': 3.0, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.0}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 3.4, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.4}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 4.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.6}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -3333.333333333333, 'defender_1': -1533.333333333333, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 1, 'simulation_id': 9, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 2, 'actions': {'challenger': {'price': 4.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.8}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 3.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.8}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 4.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.9}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -853.3333333333351, 'defender_1': -2800.0, 'defender_2': -206.66666666666498}, 'game_state': {'game_type': 'static', 'current_round': 2, 'simulation_id': 9, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 3, 'actions': {'challenger': {'price': 4.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.5}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.6}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.3}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -2099.9999999999986, 'defender_1': -1360.0000000000014, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 3, 'simulation_id': 9, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 4, 'actions': {'challenger': {'price': 3.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.9}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 7.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.2}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 6.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.2}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -2733.333333333333, 'defender_1': -0.0, 'defender_2': -599.9999999999999}, 'game_state': {'game_type': 'static', 'current_round': 4, 'simulation_id': 9, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 5, 'actions': {'challenger': {'price': 2.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.2}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 2.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.6}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 3.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.5}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -3866.6666666666665, 'defender_1': -1800.0, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 5, 'simulation_id': 9, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 6, 'actions': {'challenger': {'price': 7.1, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.1}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 7.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 7.8}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 3.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.5}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -300.0000000000001, 'defender_1': -0.0, 'defender_2': -3000.0}, 'game_state': {'game_type': 'static', 'current_round': 6, 'simulation_id': 9, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 7, 'actions': {'challenger': {'price': 2.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.3}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 3.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.5}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 5.5, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.5}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -3800.0, 'defender_1': -1500.0, 'defender_2': -0.0}, 'game_state': {'game_type': 'static', 'current_round': 7, 'simulation_id': 9, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 8, 'actions': {'challenger': {'price': 3.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.9}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 6.2, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 6.2}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 2.7, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 2.7}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -1366.6666666666665, 'defender_1': -0.0, 'defender_2': -3533.333333333333}, 'game_state': {'game_type': 'static', 'current_round': 8, 'simulation_id': 9, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 9, 'actions': {'challenger': {'price': 3.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.9}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 5.6, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.6}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 4.9, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.9}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -2733.333333333333, 'defender_1': -0.0, 'defender_2': -1033.3333333333333}, 'game_state': {'game_type': 'static', 'current_round': 9, 'simulation_id': 9, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}, {'round': 10, 'actions': {'challenger': {'price': 5.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 5.3}', 'player_id': 'challenger', 'parsing_success': True}, 'defender_1': {'price': 4.3, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 4.3}', 'player_id': 'defender_1', 'parsing_success': True}, 'defender_2': {'price': 3.8, 'parsing_method': 'number_extraction', 'raw_response': '{\"quantity\": 3.8}', 'player_id': 'defender_2', 'parsing_success': True}}, 'payoffs': {'challenger': -0.0, 'defender_1': -1233.3333333333333, 'defender_2': -2800.0}, 'game_state': {'game_type': 'static', 'current_round': 10, 'simulation_id': 9, 'constants': {'number_of_players': 3, 'marginal_cost': 8, 'fixed_cost': 100, 'transport_cost': 0.5, 'v': 30, 'market_size': 1000}}}], 'num_rounds_played': 10}}, round_data=[])"
  ],
  "competition_metadata": {
    "total_simulations": 10,
    "successful_simulations": 10,
    "failed_simulations": 0,
    "success_rate": 1.0,
    "game_config": {
      "game_name": "salop",
      "experiment_type": "ablation_studies",
      "condition_name": "low_differentiation",
      "constants": {
        "number_of_players": 3,
        "marginal_cost": 8,
        "fixed_cost": 100,
        "transport_cost": 0.5,
        "v": 30,
        "market_size": 1000
      }
    },
    "mock_mode": true
  },
  "start_time": "2025-09-11T02:07:56.833452",
  "end_time": "2025-09-11T02:08:00.233267",
  "total_duration": 3.399815
}