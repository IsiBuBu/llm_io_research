{
  "game_name": "green_porter",
  "experiment_type": "ablation_studies",
  "condition_name": "low_patience",
  "challenger_model": "gemini_2_0_flash_lite",
  "challenger_display_name": "Gemini 2.0 Flash-Lite (No Thinking)",
  "defender_model": "gemini_2_0_flash_lite",
  "defender_display_name": "Gemini 2.0 Flash-Lite (No Thinking)",
  "challenger_thinking_enabled": false,
  "defender_thinking_enabled": false,
  "competition_metadata": {
    "num_simulations_planned": 1,
    "num_simulations_successful": 1,
    "num_simulations_failed": 0,
    "success_rate": 1.0,
    "game_config": {
      "game_name": "green_porter",
      "experiment_type": "ablation_studies",
      "condition_name": "low_patience",
      "constants": {
        "number_of_players": 3,
        "time_horizon": 2,
        "base_demand": 120,
        "marginal_cost": 20,
        "demand_shock_std": 5,
        "trigger_price": 55,
        "punishment_duration": 3,
        "collusive_quantity": 17,
        "cournot_quantity": 25,
        "discount_factor": 0.5
      }
    }
  },
  "start_time": "2025-09-10T21:52:39.775068",
  "end_time": "2025-09-10T21:52:56.462679",
  "total_duration": 16.687611,
  "simulation_results": [
    {
      "simulation_id": 0,
      "players": [
        "challenger",
        "defender_1",
        "defender_2"
      ],
      "actions": {
        "challenger": {
          "quantity": 40.0,
          "raw_response": "```json\n{\"quantity\": 40}\n```",
          "parsing_method": "json",
          "player_id": "challenger",
          "parsing_success": true
        },
        "defender_1": {
          "quantity": 40.0,
          "raw_response": "```json\n{\"quantity\": 40}\n```",
          "parsing_method": "json",
          "player_id": "defender_1",
          "parsing_success": true
        },
        "defender_2": {
          "quantity": 40.0,
          "raw_response": "```json\n{\"quantity\": 40}\n```",
          "parsing_method": "json",
          "player_id": "defender_2",
          "parsing_success": true
        }
      },
      "payoffs": {
        "challenger": -719.9685583265555,
        "defender_1": -719.9685583265555,
        "defender_2": -719.9685583265555
      },
      "game_data": {
        "game_data": {
          "game_name": "green_porter",
          "experiment_type": "ablation_studies",
          "condition_name": "low_patience",
          "constants": {
            "number_of_players": 3,
            "time_horizon": 2,
            "base_demand": 120,
            "marginal_cost": 20,
            "demand_shock_std": 5,
            "trigger_price": 55,
            "punishment_duration": 3,
            "collusive_quantity": 17,
            "cournot_quantity": 25,
            "discount_factor": 0.5
          },
          "actions": {
            "challenger": {
              "quantity": 40.0,
              "raw_response": "```json\n{\"quantity\": 40}\n```",
              "parsing_method": "json",
              "player_id": "challenger",
              "parsing_success": true
            },
            "defender_1": {
              "quantity": 40.0,
              "raw_response": "```json\n{\"quantity\": 40}\n```",
              "parsing_method": "json",
              "player_id": "defender_1",
              "parsing_success": true
            },
            "defender_2": {
              "quantity": 40.0,
              "raw_response": "```json\n{\"quantity\": 40}\n```",
              "parsing_method": "json",
              "player_id": "defender_2",
              "parsing_success": true
            }
          },
          "payoffs": {
            "challenger": -719.9685583265555,
            "defender_1": -719.9685583265555,
            "defender_2": -719.9685583265555
          },
          "npvs": {
            "challenger": -719.9685583265555,
            "defender_1": -719.9685583265555,
            "defender_2": -719.9685583265555
          },
          "price_history": [
            0
          ],
          "state_history": [
            "Collusive"
          ],
          "quantity_history": {
            "challenger": [
              429.0
            ],
            "defender_1": [
              17.0
            ],
            "defender_2": [
              17.0
            ]
          },
          "profit_history": {
            "challenger": [
              -719.9685583265555
            ],
            "defender_1": [
              -719.9685583265555
            ],
            "defender_2": [
              -719.9685583265555
            ]
          },
          "win_status": {
            "challenger": 1,
            "defender_1": 1,
            "defender_2": 1
          },
          "strategic_inertia": {
            "challenger": 0,
            "defender_1": 0,
            "defender_2": 0
          },
          "cooperation_periods": {
            "challenger": 1,
            "defender_1": 1,
            "defender_2": 1
          },
          "coordination_actions": {
            "challenger": 0,
            "defender_1": 1,
            "defender_2": 1
          },
          "rationality_periods": {
            "challenger": 0,
            "defender_1": 1,
            "defender_2": 1
          },
          "reversion_frequency": 0,
          "current_period": 2,
          "market_state": "Reversionary",
          "total_periods": 2,
          "game_state": {
            "current_period": 2,
            "market_state": "Reversionary",
            "punishment_timer": 3,
            "demand_shocks": [
              8.82026172983832,
              2.0007860418361165
            ],
            "price_history": [
              0
            ],
            "quantity_history": {
              "challenger": [
                429.0
              ],
              "defender_1": [
                17.0
              ],
              "defender_2": [
                17.0
              ]
            },
            "profit_history": {
              "challenger": [
                -719.9685583265555
              ],
              "defender_1": [
                -719.9685583265555
              ],
              "defender_2": [
                -719.9685583265555
              ]
            },
            "state_history": [
              "Collusive"
            ],
            "total_periods": 2,
            "last_market_price": 2.0007860418361165,
            "last_total_quantity": 120.0,
            "last_quantities": {
              "challenger": 40.0,
              "defender_1": 40.0,
              "defender_2": 40.0
            }
          }
        },
        "round_data": [
          {
            "round": 1,
            "actions": {
              "challenger": {
                "quantity": 429.0,
                "parsing_method": "number",
                "raw_response": "{\"error\": \"429 RESOURCE_EXHAUSTED. {'error': {'code': 429, 'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, head to: https://ai.google.dev/gemini-api/docs/rate-limits.', 'status': 'RESOURCE_EXHAUSTED', 'details': [{'@type': 'type.googleapis.com/google.rpc.QuotaFailure', 'violations': [{'quotaMetric': 'generativelanguage.googleapis.com/generate_content_free_tier_requests', 'quotaId': 'GenerateRequestsPerMinutePerProjectPerModel-FreeTier', 'quotaDimensions': {'location': 'global', 'model': 'gemini-2.0-flash-lite'}, 'quotaValue': '30'}]}, {'@type': 'type.googleapis.com/google.rpc.Help', 'links': [{'description': 'Learn more about Gemini API quotas', 'url': 'https://ai.google.dev/gemini-api/docs/rate-limits'}]}, {'@type': 'type.googleapis.com/google.rpc.RetryInfo', 'retryDelay': '16s'}]}}\"}",
                "player_id": "challenger",
                "parsing_success": true
              },
              "defender_1": {
                "quantity": 17.0,
                "raw_response": "```json\n{\"quantity\": 17}\n```",
                "parsing_method": "json",
                "player_id": "defender_1",
                "parsing_success": true
              },
              "defender_2": {
                "quantity": 17.0,
                "raw_response": "```json\n{\"quantity\": 17}\n```",
                "parsing_method": "json",
                "player_id": "defender_2",
                "parsing_success": true
              }
            },
            "payoffs": {
              "challenger": -8580.0,
              "defender_1": -340.0,
              "defender_2": -340.0
            },
            "game_state": {
              "current_period": 2,
              "market_state": "Reversionary",
              "punishment_timer": 3,
              "demand_shocks": [
                8.82026172983832,
                2.0007860418361165
              ],
              "price_history": [
                0
              ],
              "quantity_history": {
                "challenger": [
                  429.0
                ],
                "defender_1": [
                  17.0
                ],
                "defender_2": [
                  17.0
                ]
              },
              "profit_history": {
                "challenger": [
                  -719.9685583265555
                ],
                "defender_1": [
                  -719.9685583265555
                ],
                "defender_2": [
                  -719.9685583265555
                ]
              },
              "state_history": [
                "Collusive"
              ],
              "total_periods": 2,
              "last_market_price": 0,
              "last_total_quantity": 463.0,
              "last_quantities": {
                "challenger": 429.0,
                "defender_1": 17.0,
                "defender_2": 17.0
              }
            },
            "duration": 13.889447212219238
          },
          {
            "round": 2,
            "actions": {
              "challenger": {
                "quantity": 40.0,
                "raw_response": "```json\n{\"quantity\": 40}\n```",
                "parsing_method": "json",
                "player_id": "challenger",
                "parsing_success": true
              },
              "defender_1": {
                "quantity": 40.0,
                "raw_response": "```json\n{\"quantity\": 40}\n```",
                "parsing_method": "json",
                "player_id": "defender_1",
                "parsing_success": true
              },
              "defender_2": {
                "quantity": 40.0,
                "raw_response": "```json\n{\"quantity\": 40}\n```",
                "parsing_method": "json",
                "player_id": "defender_2",
                "parsing_success": true
              }
            },
            "payoffs": {
              "challenger": -719.9685583265555,
              "defender_1": -719.9685583265555,
              "defender_2": -719.9685583265555
            },
            "game_state": {
              "current_period": 2,
              "market_state": "Reversionary",
              "punishment_timer": 3,
              "demand_shocks": [
                8.82026172983832,
                2.0007860418361165
              ],
              "price_history": [
                0
              ],
              "quantity_history": {
                "challenger": [
                  429.0
                ],
                "defender_1": [
                  17.0
                ],
                "defender_2": [
                  17.0
                ]
              },
              "profit_history": {
                "challenger": [
                  -719.9685583265555
                ],
                "defender_1": [
                  -719.9685583265555
                ],
                "defender_2": [
                  -719.9685583265555
                ]
              },
              "state_history": [
                "Collusive"
              ],
              "total_periods": 2,
              "last_market_price": 2.0007860418361165,
              "last_total_quantity": 120.0,
              "last_quantities": {
                "challenger": 40.0,
                "defender_1": 40.0,
                "defender_2": 40.0
              }
            },
            "duration": 2.6628689765930176
          }
        ]
      },
      "round_data": []
    }
  ]
}